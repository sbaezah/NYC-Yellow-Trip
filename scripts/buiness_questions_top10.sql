-- TOP 10 MOST COMMON PICKUP/DROPOFF PAIRS BY NUMBER OF TRIPS
with PU_DO_TABLE AS
(SELECT 
FT.PICKUP_DATE_SK,
FT.PICKUP_TIME_SK,
FT.DROPOFF_DATE_SK,
DD.DATE_VALUE,
DD.YEAR || '-' ||DD.MONTH_OF_YEAR AS YEAR_MONTH,
FT.DROPOFF_TIME_SK,
FT.PASSENGER_COUNT,
FT.DURATION_SECONDS,
FT.TRIP_DISTANCE,
FT.TRIP_DISTANCE_MT,
FT.PULOCATIONID,
DZ1.BOROUGH_NAME AS PU_BOROUGH,
DZ1.SERVICE_ZONE_NAME AS PU_SERVICE_ZONE,
DZ1.ZONE_NAME AS PU_ZONE_NAME,
FT.DOLOCATIONID,
DZ2.BOROUGH_NAME AS DO_BOROUGH,
DZ2.SERVICE_ZONE_NAME AS DO_SERVICE_ZONE,
DZ2.ZONE_NAME AS DO_ZONE_NAME,
FT.PAYMENT_TYPE_ID,
FT.FARE_AMOUNT,
FT.EXTRA,
FT.MTA_TAX,
FT.TIP_AMOUNT,
FT.TOLLS_AMOUNT,
FT.IMPROVEMENT_SURCHARGE,
FT.TOTAL_AMOUNT,
FT.CONGESTION_SURCHARGE
FROM NYC_YELLOW.TRIPS_GOLD.FACT_TRIP FT
LEFT JOIN NYC_YELLOW.TRIPS_GOLD.DIM_ZONE DZ1 ON (FT.PULOCATIONID = DZ1.LOCATIONID)
LEFT JOIN NYC_YELLOW.TRIPS_GOLD.DIM_ZONE DZ2 ON (FT.DOLOCATIONID = DZ2.LOCATIONID)
LEFT JOIN NYC_YELLOW.TRIPS_GOLD.DIM_DATE DD  ON (FT.PICKUP_DATE_SK = DD.DATE_SK)
)
,
agg_pu_do_table AS(
SELECT
YEAR_MONTH,
PULOCATIONID || '-' || DOLOCATIONID AS FROM_TO_LOC,
PU_BOROUGH,
PU_SERVICE_ZONE,
PU_ZONE_NAME,
DO_BOROUGH,
DO_SERVICE_ZONE,
DO_ZONE_NAME,
RANK() OVER (PARTITION BY YEAR_MONTH ORDER BY COUNT(*) DESC) AS COUNT_RANK,
COUNT(*) AS TRIP_COUNT,
SUM(TOTAL_AMOUNT) AS TOTAL_AMOUNT,
SUM(FARE_AMOUNT) AS FARE_AMOUNT
FROM PU_DO_TABLE
GROUP BY
YEAR_MONTH,
PULOCATIONID || '-' || DOLOCATIONID,
PU_BOROUGH,
PU_SERVICE_ZONE,
PU_ZONE_NAME,
DO_BOROUGH,
DO_SERVICE_ZONE,
DO_ZONE_NAME)


SELECT 
-- FR.YEAR_MONTH,
RANK() OVER (ORDER BY SUM(FR.TRIP_COUNT) DESC) AS COUNT_RANK,
FR.FROM_TO_LOC,
FR.PU_BOROUGH || '-' || FR.PU_ZONE_NAME AS PU_BOR_ZONE,
FR.DO_BOROUGH || '-' || FR.DO_ZONE_NAME AS DO_BOR_ZONE,
SUM(FR.TRIP_COUNT) as TRIP_COUNT
FROM AGG_PU_DO_TABLE FR
WHERE
FR.COUNT_RANK <= 10
AND 
YEAR_MONTH NOT IN ('2024-12','2025-3')
GROUP BY FR.FROM_TO_LOC,
FR.PU_BOROUGH || '-' || FR.PU_ZONE_NAME,
FR.DO_BOROUGH || '-' || FR.DO_ZONE_NAME
ORDER BY COUNT_RANK



-- SHORT DISTANCE TRIPS
with trip_distance as
(SELECT
FT.VENDORID,
FT.PICKUP_DATE_SK,
FT.PICKUP_TIME_SK,
FT.DROPOFF_DATE_SK,
FT.DROPOFF_TIME_SK,
FT.DURATION_SECONDS,
FT.DURATION_MINUTES,
FT.TRIP_DISTANCE,
FT.TRIP_DISTANCE_MT,
CASE    WHEN FT.TRIP_DISTANCE_MT >= 0    AND FT.TRIP_DISTANCE_MT <= 1000
        THEN 'A.- 0-1000'
        WHEN FT.TRIP_DISTANCE_MT >  1000 AND FT.TRIP_DISTANCE_MT <= 5000
        THEN 'B.- 1001-5000'
        WHEN FT.TRIP_DISTANCE_MT >  5000 AND FT.TRIP_DISTANCE_MT <= 9000
        THEN 'C.- 5000-9000'
        WHEN FT.TRIP_DISTANCE_MT >  9000 AND FT.TRIP_DISTANCE_MT <= 13000
        THEN 'D.- 9000-13000'
        WHEN FT.TRIP_DISTANCE_MT >  13000 AND FT.TRIP_DISTANCE_MT <= 18000
        THEN 'E.- 13000-18000'
        ELSE 'F.- 18000+'
        END DISTANCE_MT_GROUP1,
CASE    WHEN FT.TRIP_DISTANCE_MT >= 0   AND FT.TRIP_DISTANCE_MT <= 200
        THEN 'A.- 0-200'
        WHEN FT.TRIP_DISTANCE_MT >  200 AND FT.TRIP_DISTANCE_MT <= 400
        THEN 'B.- 200-400'
        WHEN FT.TRIP_DISTANCE_MT >  400 AND FT.TRIP_DISTANCE_MT <= 600
        THEN 'C.- 400-600'
        WHEN FT.TRIP_DISTANCE_MT >  600 AND FT.TRIP_DISTANCE_MT <= 800
        THEN 'D.- 600-800'
        WHEN FT.TRIP_DISTANCE_MT >  800 AND FT.TRIP_DISTANCE_MT <= 1000
        THEN 'E.- 800-1000'
        ELSE 'F.- 1000+'
        END DISTANCE_MT_GROUP2,
FT.TRIP_DISTANCE_KM,
FT.PULOCATIONID,
FT.DOLOCATIONID,
FT.PAYMENT_TYPE_ID,
FT.FARE_AMOUNT,
FT.TIP_AMOUNT,
FT.TOTAL_AMOUNT,
FT.TIP_PERC 
FROM NYC_YELLOW.TRIPS_GOLD.FACT_TRIP FT)
,

AGG_DISTANCE_TABLE AS (
select
'ALL DISTANCES' AS GROUP_TYPE,
td.DISTANCE_MT_GROUP1 AS DIST_MT_GRP,
COUNT(*) AS TRIPS_COUNT
from trip_distance as td
GROUP BY td.DISTANCE_MT_GROUP1
UNION
select
'SHORT DISTANCES',
td.DISTANCE_MT_GROUP2,
COUNT(*) AS TRIPS_COUNT
from trip_distance as td
GROUP BY td.DISTANCE_MT_GROUP2)


SELECT 
GROUP_TYPE,
DIST_MT_GRP,
TRIPS_COUNT
FROM AGG_DISTANCE_TABLE
ORDER BY GROUP_TYPE,DIST_MT_GRP


-- DATA FOR THE HEATMAP
with CORR_TABLE AS
(SELECT 
FT.PICKUP_DATE_SK,
FT.PICKUP_TIME_SK,
FT.DROPOFF_DATE_SK,
DD.DATE_VALUE,
DD.YEAR || '-' ||DD.MONTH_OF_YEAR AS YEAR_MONTH,
DD.DAY_OF_WEEK,
DD.DAY_OF_WEEK_NAME,
DT.HOUR_24,
DT.TIME_OF_DAY,
FT.DROPOFF_TIME_SK,
FT.PASSENGER_COUNT,
FT.DURATION_SECONDS,
FT.TRIP_DISTANCE,
FT.TRIP_DISTANCE_MT,
FT.FARE_AMOUNT,
FT.TOTAL_AMOUNT
FROM NYC_YELLOW.TRIPS_GOLD.FACT_TRIP FT
LEFT JOIN NYC_YELLOW.TRIPS_GOLD.DIM_DATE DD  ON (FT.PICKUP_DATE_SK = DD.DATE_SK)
LEFT JOIN NYC_YELLOW.TRIPS_GOLD.DIM_TIME DT  ON (FT.PICKUP_TIME_SK = DT.TIME_SK)
)

SELECT 
CT.DAY_OF_WEEK_NAME,
CT.TIME_OF_DAY,
COUNT(*) as TRIP
FROM CORR_TABLE CT
GROUP BY 
CT.DAY_OF_WEEK_NAME,
CT.TIME_OF_DAY



-- BOROUGHS WITH THE HIGHEST AVG FARE PER KM
with PU_DO_TABLE AS
(SELECT 
FT.PICKUP_DATE_SK,
FT.PICKUP_TIME_SK,
FT.DROPOFF_DATE_SK,
DD.DATE_VALUE,
FT.DROPOFF_TIME_SK,
FT.PASSENGER_COUNT,
FT.DURATION_SECONDS,
FT.TRIP_DISTANCE,
FT.PULOCATIONID,
DZ1.BOROUGH_NAME AS PU_BOROUGH,
DZ1.SERVICE_ZONE_NAME AS PU_SERVICE_ZONE,
DZ1.ZONE_NAME AS PU_ZONE_NAME,
FT.DOLOCATIONID,
DZ2.BOROUGH_NAME AS DO_BOROUGH,
DZ2.SERVICE_ZONE_NAME AS DO_SERVICE_ZONE,
DZ2.ZONE_NAME AS DO_ZONE_NAME,
FT.FARE_AMOUNT/TRIP_DISTANCE_KM AS FARE_KM,
FT.TRIP_DISTANCE_MT,
FT.TRIP_DISTANCE_KM,
FT.FARE_AMOUNT,
FT.TOTAL_AMOUNT
FROM NYC_YELLOW.TRIPS_GOLD.FACT_TRIP FT
LEFT JOIN NYC_YELLOW.TRIPS_GOLD.DIM_ZONE DZ1 ON (FT.PULOCATIONID = DZ1.LOCATIONID)
LEFT JOIN NYC_YELLOW.TRIPS_GOLD.DIM_ZONE DZ2 ON (FT.DOLOCATIONID = DZ2.LOCATIONID)
LEFT JOIN NYC_YELLOW.TRIPS_GOLD.DIM_DATE DD  ON (FT.PICKUP_DATE_SK = DD.DATE_SK)
WHERE
TRIP_DISTANCE_KM > 0 AND TRIP_DISTANCE_KM < 60
AND FARE_AMOUNT > 0 AND FARE_AMOUNT < 500
)


SELECT 
PU_BOROUGH,
AVG(FARE_KM) AS AVG_FARE_KM
FROM PU_DO_TABLE FR
GROUP BY 
PU_BOROUGH
ORDER BY AVG(FARE_KM) DESC

